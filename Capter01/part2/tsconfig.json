{
  /*
    tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译

      "include" 用来指定哪些ts文件需要被编译
      路劲：** 表示任意目录
            *  表示任意文件
      "exclude" 不需要被编译的文件目录，默认值为；["node_module","bower_components","jspm_packages"]
  */
  "include": ["./src/**/*"],
  // "exclude": ["./src/hello/**/*"]

  /*
    compilerOptions 编译器的选项
  */
  "compilerOptions": {
    // target 用来指定ts被编译为的ES版本
    "target": "ES6",
    // module 指定要使用的模块化规范
    "module": "ES2015",
    // lib 用来指定项目中要使用的库
    // "lib": []

    // outDir 用来指定编译后文件所在的目录
    "outDir": "./dist",

    // outFile 可以将我们的代码合并为一个文件
    // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中
    // "outFile": "./dist/chy.js"

    // allowJs: 是否对js文件进行编译，默认是fasle
    "allowJs": true,

    // checkJs 是否检查js代码是否符合语法规范，默认是false
    "checkJs": true,

    // removeComments 是否移除注释
    "removeComments": true,

    // noEmit 不生成编译后文件
    "noEmit": false,

    // strict 所有严格检查的总开关
    "strict": false,

    // noEmitOnError 当有错误时不生成编译后文件
    "noEmitOnError": true,

    // alwaysStrict 用来设置编译后的文件是否使用严格模式，默认是false
    "alwaysStrict": true,

    // noImplicitAny 不允许隐式的any类型
    "noImplicitAny": true,

    // noImplicitThis 不允许不明确类型的this
    "noImplicitThis": false,

    // strictNullChecks 严格的检查空值
    "strictNullChecks": false
  }
}
